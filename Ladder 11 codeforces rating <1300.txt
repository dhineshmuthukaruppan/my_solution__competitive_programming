===========================================
Ladder Name: 11 - Codeforces Rating < 1300=
===========================================



August 31 -  problems read  
============================



1) Young physist - DIV2A - 1000
https://codeforces.com/problemset/problem/69/A
Editorial
=========
In this task all you had to do was to make sure that the sum of all Σxi is 0, the sum of all Σy i is 0 and that the sum of all Σzi - 0 .
We have not written that condition evidently in order that participants will have a chance to break a solution.


2) Beautiful matrix - DIV 2A - 800 - 
4.05 - 4.05 
https://codeforces.com/problemset/problem/263/A
If the single 1 is located on the intersection of the r-th row and the c-th column (1-based numeration), then the answer is |3 - r| + |3 - c|.


3) Queue at the school - DIV2B - 800
https://codeforces.com/problemset/problem/266/B
Editorial
=========
In this you should realize the given process. You should t times swap elements i and i + 1 if on the place i was a girl and on 
the place i + 1 was a boy. You should not push some girl to the left multiple times at once. The solution can be written using O(N·T) time.


4) Borze  - DIV2B - 800
4.07 - 4.10
https://codeforces.com/problemset/problem/32/B
Replace all occurrences of '--' with '2', '-.' with '1' and '.' with '0'.
Initially, there was some problem with the test cases but was rectified soon.


5) beautiful year - DIV2A - 800
4.10 - 4.13
https://codeforces.com/problemset/problem/271/A
This is a very straight forward problem. Just add 1 to a year number while it still has equal digits.


6) lights out - DIV 2A - Implementation 800
4.20 - 4.30
https://codeforces.com/problemset/problem/275/A
For each light you should count the number of times it’s been toggled. Consider a light is toggled k times. 
If k is even then the final state of the light is ‘on’ otherwise it’s ‘off’. The implementation would be easy. You may look at the accepted solutions as reference.


23) boy or a girl - DIV2A - bruteforce, implementation, string - 800
4.40 - 4.44 
https://codeforces.com/problemset/problem/236/A
It is a very simple problem, just count how many distinct chars in the input and write the correct answer.



30) effective approach - DIV2B - Implementation -1100 
4.45 - 4.55
https://codeforces.com/problemset/problem/227/B
Let's assume that number t is on the ind t th position in the original permutation. Then, obviously, during iterating from left to 
right this number will be found in ind t comparisons, and during iterating from right to left — in n - ind t + 1 comparisons. Let's declare additional array, 
in i th element of each there will be such number j, that a j = i. This array allows to process each query in O(1) using formulas referred above. Additional 
array is built in O(n) during iterating array a. So, the final complexity is O(n + m).


100) Adding digits - DIV2A- 1400
https://codeforces.com/problemset/problem/260/A
Editorial
=========
At first try to add to the right one digit from 0 to 9. If it is impossible write -1. 
In other case, the remaining n–1 digits can be 0 because divisibility doesn’t change.









