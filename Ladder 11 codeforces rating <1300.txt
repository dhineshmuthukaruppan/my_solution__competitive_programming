===========================================
Ladder Name: 11 - Codeforces Rating < 1300=
===========================================
Total IMPLEMENTED - 5
Total read - 20



August 31 - 14 problems read  
============================


1) Young physist - DIV2A - 1000
https://codeforces.com/problemset/problem/69/A
Editorial
=========
In this task all you had to do was to make sure that the sum of all Σxi is 0, the sum of all Σy i is 0 and that the sum of all Σzi - 0 .
We have not written that condition evidently in order that participants will have a chance to break a solution.


2) Beautiful matrix - DIV 2A - 800 - 
4.05 - 4.05 
https://codeforces.com/problemset/problem/263/A
If the single 1 is located on the intersection of the r-th row and the c-th column (1-based numeration), then the answer is |3 - r| + |3 - c|.


3) Queue at the school - DIV2B - 800
https://codeforces.com/problemset/problem/266/B
Editorial
=========
In this you should realize the given process. You should t times swap elements i and i + 1 if on the place i was a girl and on 
the place i + 1 was a boy. You should not push some girl to the left multiple times at once. The solution can be written using O(N·T) time.


4) Borze  - DIV2B - 800
4.07 - 4.10
https://codeforces.com/problemset/problem/32/B
Replace all occurrences of '--' with '2', '-.' with '1' and '.' with '0'.
Initially, there was some problem with the test cases but was rectified soon.


5) beautiful year - DIV2A - 800
4.10 - 4.13
https://codeforces.com/problemset/problem/271/A
This is a very straight forward problem. Just add 1 to a year number while it still has equal digits.


6) lights out - DIV 2A - Implementation 800
4.20 - 4.30
https://codeforces.com/problemset/problem/275/A
For each light you should count the number of times it’s been toggled. Consider a light is toggled k times. 
If k is even then the final state of the light is ‘on’ otherwise it’s ‘off’. The implementation would be easy. You may look at the accepted solutions as reference.


23) boy or a girl - DIV2A - bruteforce, implementation, string - 800
4.40 - 4.44 
https://codeforces.com/problemset/problem/236/A
It is a very simple problem, just count how many distinct chars in the input and write the correct answer.



30) effective approach - DIV2B - Implementation -1100 
4.45 - 4.55
https://codeforces.com/problemset/problem/227/B
Let's assume that number t is on the ind t th position in the original permutation. Then, obviously, during iterating from left to 
right this number will be found in ind t comparisons, and during iterating from right to left — in n - ind t + 1 comparisons. Let's declare additional array, 
in i th element of each there will be such number j, that a j = i. This array allows to process each query in O(1) using formulas referred above. Additional 
array is built in O(n) during iterating array a. So, the final complexity is O(n + m).


31) Dima and friends - DIV2A - Implementation, math - 1000
https://codeforces.com/problemset/problem/272/A
We will bruteforce number of fingers that will be show Dima, then if total sum of fingers = 1 modulo (n+1), 
Dima will clean the room. So we should increase answer if the remaining part after division by (n+1) is not 1.


42) magic numbers- DIV2A - Implementation, greedy - 900
https://codeforces.com/problemset/problem/320/A
The number should only consist of digits 1 and 4.
The number should begin with digit 1.
The number should not contain three consecutive fours (i.e. 444).



48) Business trip - DIV2A - greedy, implementation, sorting - 900
https://codeforces.com/problemset/problem/149/A
1. Sort month by how many centimeters they can make a flower grow in ascending order.
2. Pick the month with the largest growth value, and add it to variable named "sum".
3. Repeat procedure 2 until value of "sum" >= k



50) kstring - DIV2A - string, implementation - 1000
https://codeforces.com/problemset/problem/219/A
Count the occurrences of each character. If any character appears a number of times not divisible by K, 
obviously, there is no solution. Otherwise, form the solution by first making the string B. The string B can be 
any string with the following property: if some character ch appears q times in the string B, the same character appears q***K** times in 
the given string. Now, just print that string K times.



98) sort the array - DIV2A - Implementaion, sorting - 1000 *****IMPLEMENTED*****
https://codeforces.com/problemset/problem/451/B





100) Adding digits - DIV2A- 1400
https://codeforces.com/problemset/problem/260/A
Editorial
=========
At first try to add to the right one digit from 0 to 9. If it is impossible write -1. 
In other case, the remaining n–1 digits can be 0 because divisibility doesn’t change.



September 2  - 6 problems read
=============

*****IMPLEMENTED*****
7) word DIV2A - implementation 800
9.10 - 9.25
https://codeforces.com/problemset/problem/59/A


17) cupboards - DIV2A implementation - 800
https://codeforces.com/problemset/problem/248/A
In this task, you can consider independently all the left cabinet doors and, similarly, 
all the right ones. Obviously, in order to bring all the left cabinet doors to the 
same position, you need to determine which of the two states ("left door open" or 
"left door closed") occurs more often. All left doors that are in a different state 
need to be brought to this. The same should be done with the right doors. If you 
accurately count in this case the number of operations for changing the state of the 
door, then this will be the answer.


*****IMPLEMENTED*****
77) Increase and decrease DIV2B greedy, math - 1300
https://codeforces.com/problemset/problem/246/B    
Note, that you can always get the answer n–1. To get this result you should make first n–1 equal using the last element 
as the second element in pair of given operation. But after it, the whole array could become equal. It could happen if the sum 
of array’s elements is divisible by n. So the answer is n–1 or n.


88) IQ TEST - Implementation 1100
https://codeforces.com/problemset/problem/287/A
The problem was in finding square 2×2 containing 0, 1, 3 or 4 black cells. Let’s notice that if square contains
2 black cells you can’t change it to 0 or 4 but in any other case you can do it.



****IMPLEMENTED*****
99) sereja and bottles - DIV2A - bruteforce - 1400 
https://codeforces.com/problemset/problem/315/A
Just check for each bottle, can I open it with another. In this task can pass absolutely any solutions.


*****IMPLEMENTED*****
95) polo the penguin matrix    DIV 2B brute force    dp    implementation    sortings    ternary search    *1400
https://codeforces.com/problemset/problem/289/B
Solution. First of all, we need to know when the answer is -1. For that you should notice that after any operation on number z, 
value  doesn't change. Indeed, . This means that there is not answer if there are two different points for which  is diffrent.
Now we can transform our problem a bit. We can just write down all integers from matrix n × m to one array b of size k = n × m and sort them 
all in non-decreasing order. It is not hard to notice that in some of the optimal solutions, all number are at the end equal to one 
of the number for starting array. But also, it is optimal to make all number equal to b[k+1 /2] (median element). 
Why to median? Suppose that we make all numbers equal to non-median element with index x.   
Then if |x - (k - x)| > 1 (i. e. from one side there are more elements than from another + 1). So, by moving out element more to median, we can make result better.
After we know, to which number we should bring all, the answer is just , divided by d.
Note. There is also full solution with complexity O(n 2 m 2).















